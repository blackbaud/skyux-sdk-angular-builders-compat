import { Rule } from '@angular-devkit/schematics';
import {
  addPackageJsonDependency,
  NodeDependencyType
} from '@schematics/angular/utility/dependencies';

// async function readJson(host: WorkspaceHost, filePath: string): Promise<any> {
//   const contents = await host.readFile(filePath);
//   return JSON.parse(contents);
// }

// async function modifyAngularJson(
//   host: workspaces.WorkspaceHost
// ): Promise<void> {
//   const angularJson = await readJson(host, 'angular.json');

//   const hasRootApplication = await host.isDirectory('src');

//   if (hasRootApplication) {
//     const defaultProject = angularJson.defaultProject;
//     angularJson.projects[defaultProject].architect.lint = {
//       builder: '@angular-devkit/build-angular:tslint',
//       options: {
//         tsConfig: ['tsconfig.app.json', 'tsconfig.spec.json'],
//         exclude: ['**/node_modules/**']
//       }
//     };
//   } else {
//     for (const project in angularJson.projects) {
//       const fileSuffix =
//         angularJson.projects[project].projectType === 'library' ? 'lib' : 'app';
//       angularJson.projects[project].architect.lint = {
//         builder: '@angular-devkit/build-angular:tslint',
//         options: {
//           tsConfig: [
//             `projects/${project}/tsconfig.${fileSuffix}.json`,
//             `projects/${project}/tsconfig.spec.json`
//           ],
//           exclude: ['**/node_modules/**']
//         }
//       };
//     }
//   }

//   await host.writeFile(
//     'angular.json',
//     JSON.stringify(angularJson, undefined, 2)
//   );
// }

// async function createAppFiles(host: WorkspaceHost, tree: Tree): Promise<void> {
//   const tslintExtends = '@skyux-sdk/angular-builders-compat/config/tslint';

//   const tslintExists = await host.isFile('tslint.json');
//   if (tslintExists) {
//     let tslintContents = await host.readFile('tslint.json');
//     tslintContents = tslintContents.replace(
//       '"@skyux-sdk/builder/tslint"',
//       `"${tslintExtends}"`
//     );
//     await host.writeFile('tslint.json', tslintContents);
//     return;
//   }

//   tree.create(
//     'tslint.json',
//     JSON.stringify(
//       {
//         extends: tslintExtends,
//         // The files that are generated by Angular CLI do not pass our lint rules.
//         // Adding some overrides to allow default implementation to work.
//         rules: {
//           'member-access': false,
//           'no-consecutive-blank-lines': false,
//           'trailing-comma': false
//         }
//       },
//       undefined,
//       2
//     )
//   );
// }

export default function setupTslint(): Rule {
  return (tree) => {
    addPackageJsonDependency(tree, {
      type: NodeDependencyType.Dev,
      name: 'codelyzer',
      version: '^6.0.0',
      overwrite: false
    });

    addPackageJsonDependency(tree, {
      type: NodeDependencyType.Dev,
      name: 'tslint',
      version: '~6.1.0',
      overwrite: false
    });

    addPackageJsonDependency(tree, {
      type: NodeDependencyType.Dev,
      name: 'tslint-jasmine-rules',
      version: '^1.6.1',
      overwrite: false
    });
  };
}
